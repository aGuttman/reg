name: release

on: [push]

jobs:
  publish-binary:
    name: Publish binary
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        # - build: linux
        #   os: ubuntu-latest
        #   rust: stable
        #   target: x86_64-unknown-linux-musl
        #   cross: false
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          cross: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/regostry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-${{ matrix.rust }}

    - name: Install Linker
      if: matrix.cross
      run: |
        sudo apt update
        sudo install ${{ matrix.linker }}

    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        rustup show

    - name: Build
      run : |
        cargo build --release --target ${{ matrix.target }}

    - name: Package Artifacts
      run: |
        src=$(pwd)
        stage=
        case $RUNNER_OS in
            Linux)
                stage=$(mktemp -d)
                ;;
            maxOS)
                stage=$(mktemp -d -t tmp)
                ;;
        esac

        touch target/${{ matrix.target }}/release/newfile
        ls -a > target/${{ matrix.target }}/release/newfile
        cat target/${{ matrix.target }}/release/newfile
        echo $stage
        cd $stage
        cd /tmp
        echo after
        pwd
        ls